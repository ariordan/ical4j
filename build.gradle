buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:2.10.1'
    }
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.10.2'
    id "nebula.provided-base" version "3.0.3"
    id "com.jfrog.bintray" version "1.8.4"
    id "net.ltgt.errorprone" version "0.8.1"
    id "biz.aQute.bnd.builder" version "5.0.0"
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'nebula.optional-base'
apply from: 'gradle/dist.gradle'

group = 'com.github.ariordan'
description = 'A Java library for reading and writing iCalendar (*.ics) files'
archivesBaseName = "ical4j"
version = '3.0.19.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    slf4jVersion = '1.7.25'
    groovyVersion = '2.5.4'
}

repositories {
    mavenCentral()

}

dependencies {
    errorprone "com.google.errorprone:error_prone_core:2.3.3"
    errorproneJavac "com.google.errorprone:javac:9+181-r4173-1"

    api "org.slf4j:slf4j-api:$slf4jVersion",
            'commons-codec:commons-codec:1.11',
            'org.apache.commons:commons-lang3:3.8.1',
            'org.apache.commons:commons-collections4:4.1',
            'com.sun.mail:javax.mail:1.6.2'
    
    implementation 'javax.cache:cache-api:1.0.0', optional
    implementation "org.codehaus.groovy:groovy-all:$groovyVersion", optional
    implementation "org.codehaus.groovy:groovy-dateutil:$groovyVersion", optional

    compileOnly 'biz.aQute.bnd:bndlib:2.3.0'

    testImplementation "org.codehaus.groovy:groovy-all:$groovyVersion",
        'org.spockframework:spock-core:1.1-groovy-2.4',
        'org.ccil.cowan.tagsoup:tagsoup:1.2.1',
        "org.slf4j:slf4j-log4j12:$slf4jVersion",
        'org.ehcache:ehcache:3.4.0', 'com.sun.mail:javax.mail:1.5.4'
}

javadoc {
    if (JavaVersion.current().isJava8Compatible()) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

jar.enabled = true

artifacts {
    archives javadocJar
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name project.name
                packaging 'jar'
                description project.description
                url 'http://ical4j.github.io'

                scm {
                    url 'https://github.com/ariordan/ical4j'
                    connection 'scm:git@github.com:ariordan/ical4j.git'
                    developerConnection 'scm:git@github.com:ariordan/ical4j.git'
                }

                licenses {
                    license {
                        name 'iCal4j - License'
                        url 'https://raw.githubusercontent.com/ariordan/ical4j/master/LICENSE'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'fortuna'
                        name 'Ben Fortuna'
                    }
                    developer {
                        id 'ariordan'
                        name 'Adrian Riordan'
                    }
                }
            }
        }
    }
}

signing {
    sign configurations.archives
}